{"version":3,"sources":["webpack://dashboard-lit-element/./src/style.css","webpack://dashboard-lit-element/./node_modules/css-loader/dist/runtime/api.js","webpack://dashboard-lit-element/./node_modules/css-loader/dist/runtime/cssWithMappingToString.js","webpack://dashboard-lit-element/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://dashboard-lit-element/webpack/bootstrap","webpack://dashboard-lit-element/webpack/runtime/compat get default export","webpack://dashboard-lit-element/webpack/runtime/define property getters","webpack://dashboard-lit-element/webpack/runtime/hasOwnProperty shorthand","webpack://dashboard-lit-element/./node_modules/lit-html/lib/dom.js","webpack://dashboard-lit-element/./node_modules/lit-html/lib/template.js","webpack://dashboard-lit-element/./node_modules/lit-html/lib/modify-template.js","webpack://dashboard-lit-element/./node_modules/lit-html/lib/directive.js","webpack://dashboard-lit-element/./node_modules/lit-html/lib/part.js","webpack://dashboard-lit-element/./node_modules/lit-html/lib/template-instance.js","webpack://dashboard-lit-element/./node_modules/lit-html/lib/template-result.js","webpack://dashboard-lit-element/./node_modules/lit-html/lib/parts.js","webpack://dashboard-lit-element/./node_modules/lit-html/lib/template-factory.js","webpack://dashboard-lit-element/./node_modules/lit-html/lib/render.js","webpack://dashboard-lit-element/./node_modules/lit-html/lib/default-template-processor.js","webpack://dashboard-lit-element/./node_modules/lit-html/lit-html.js","webpack://dashboard-lit-element/./node_modules/lit-html/lib/shady-render.js","webpack://dashboard-lit-element/./node_modules/lit-element/lib/updating-element.js","webpack://dashboard-lit-element/./node_modules/lit-element/lib/decorators.js","webpack://dashboard-lit-element/./node_modules/lit-element/lib/css-tag.js","webpack://dashboard-lit-element/./node_modules/lit-element/lit-element.js","webpack://dashboard-lit-element/./src/components/Icon.js","webpack://dashboard-lit-element/./src/components/MenuItem.js","webpack://dashboard-lit-element/./src/style.css?7163","webpack://dashboard-lit-element/./src/index.js","webpack://dashboard-lit-element/./src/data.js"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","concat","join","i","modules","mediaQuery","dedupe","alreadyImportedModules","length","_i","_arrayLikeToArray","arr","len","arr2","Array","_item","isArray","_arrayWithHoles","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","next","done","value","err","_iterableToArrayLimit","o","minLen","n","prototype","call","slice","constructor","name","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","sourceURLs","sources","source","sourceRoot","memo","getTarget","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","stylesInDom","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","index","obj","css","media","sourceMap","references","updater","addStyle","insertStyleElement","style","createElement","attributes","nonce","keys","forEach","key","setAttribute","insert","Error","appendChild","textStore","replaceText","replacement","filter","Boolean","applyToSingletonTag","remove","styleSheet","cssText","cssNode","createTextNode","childNodes","removeChild","insertBefore","applyToTag","removeAttribute","firstChild","singleton","singletonCounter","update","styleIndex","bind","parentNode","removeStyleElement","newObj","all","atob","lastIdentifiers","newList","newLastIdentifiers","_index","splice","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getter","__esModule","d","a","definition","defineProperty","enumerable","get","prop","hasOwnProperty","isCEPolyfill","customElements","polyfillWrapFlushCallback","removeNodes","container","start","end","nextSibling","marker","String","Math","random","nodeMarker","markerRegex","RegExp","boundAttributeSuffix","Template","element","parts","nodesToRemove","stack","walker","createTreeWalker","lastPartIndex","partIndex","strings","values","node","nextNode","nodeType","hasAttributes","endsWith","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","statics","split","type","tagName","currentNode","indexOf","parent","lastIndex","s","createMarker","match","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","removeNodesFromTemplate","template","nextActiveIndexInTemplateParts","nodeIndex","removeCount","nodesToRemoveInTemplate","currentRemovingNode","has","countNodes","startIndex","directives","WeakMap","isDirective","noChange","nothing","TemplateInstance","processor","__parts","setValue","commit","fragment","cloneNode","importNode","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","policy","trustedTypes","createPolicy","createHTML","commentMarker","TemplateResult","l","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","getHTML","innerHTML","isPrimitive","isIterable","AttributeCommitter","dirty","_createPart","AttributePart","v","text","t","_getValue","committer","directive","NodePart","__pendingValue","startNode","endNode","ref","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","instance","_clone","itemParts","itemPart","appendIntoPart","insertAfterPart","BooleanAttributePart","PropertyCommitter","super","single","PropertyPart","eventOptionsSupported","addEventListener","removeEventListener","EventPart","eventName","eventContext","__boundHandleEvent","handleEvent","newListener","oldListener","shouldRemoveListener","capture","once","passive","shouldAddListener","__options","getOptions","event","templateCache","templateCaches","stringsArray","keyString","Map","set","getTemplateElement","prefix","getTemplateCacheKey","scopeName","compatibleShadyCSSVersion","ShadyCSS","prepareTemplateDom","console","warn","shadyTemplateFactory","cacheKey","TEMPLATE_TYPES","shadyRenderSet","Set","JSCompiler_renameProperty","_obj","defaultConverter","Number","parse","notEqual","old","defaultPropertyDeclaration","attribute","converter","reflect","hasChanged","UpdatingElement","HTMLElement","initialize","finalize","_classProperties","p","attr","_attributeNameForProperty","_attributeToPropertyMap","superProperties","getPrototypeOf","k","_ensureClassProperties","noAccessor","descriptor","getPropertyDescriptor","oldValue","requestUpdateInternal","configurable","superCtor","props","properties","propKeys","getOwnPropertyNames","getOwnPropertySymbols","createProperty","fromAttribute","toAttribute","_updateState","_updatePromise","Promise","res","_enableUpdatingResolver","_changedProperties","_saveInstanceProperties","_v","_instanceProperties","enableUpdating","_attributeToProperty","ctor","attrValue","_propertyValueToAttribute","propName","getPropertyOptions","_propertyValueFromAttribute","shouldRequestUpdate","_valueHasChanged","_reflectingProperties","_hasRequestedUpdate","_enqueueUpdate","updateComplete","performUpdate","_applyInstanceProperties","shouldUpdate","changedProperties","_markUpdated","firstUpdated","updated","_getUpdateComplete","size","_propertyToAttribute","ElementProto","Element","msMatchesSelector","webkitMatchesSelector","supportsAdoptingStyleSheets","nativeShadow","Document","CSSStyleSheet","constructionToken","CSSResult","safeToken","_styleSheet","replaceSync","reduce","acc","idx","textFromCSSResult","renderNotImplemented","LitElement","styles","userStyles","getStyles","addStyles","reduceRight","add","unshift","_styles","cssRules","rule","_getUniqueStyles","renderRoot","createRenderRoot","ShadowRoot","adoptStyles","attachShadow","mode","adoptedStyleSheets","_needsShimAdoptedStyleSheets","ScopingShim","prepareAdoptedCssText","localName","connectedCallback","hasUpdated","styleElement","templateResult","render","textContent","hasRendered","needsScoping","host","firstScopeRender","renderContainer","createDocumentFragment","assign","appendInto","delete","renderedDOM","templateElement","querySelectorAll","prepareTemplateStyles","condensedStyle","templates","removeStylesFromLitTemplates","refNode","insertCount","walkerIndex","insertNodeIntoTemplate","removes","define","color","title","icon","url","onclick","visible","sidebar","toggleBtn","classList","innerWidth","insertAdjacentHTML"],"mappings":"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","file":"bundle.js","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body {\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  font-family: 'Roboto', sans-serif;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n.content-wrap {\\r\\n  display: flex;\\r\\n\\r\\n}\\r\\n\\r\\n.navbar {\\r\\n  width: 100%;\\r\\n  height: 60px;\\r\\n  position: absolute;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  background-color: #339cff;\\r\\n  box-shadow: 0 0 6px rgba(0, 0, 0, .4);\\r\\n  z-index: 1;\\r\\n}\\r\\n\\r\\n.navbar #toggler {\\r\\n  margin: 0 20px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.navbar h1 {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.sidebar {\\r\\n  width: 0;\\r\\n  padding-top: 70px;\\r\\n  display: block;\\r\\n  height: 100vh;\\r\\n  background-color: #5d9eff26;\\r\\n  box-shadow: rgb(0 40 73 / 53%) 0px 0px 5px;\\r\\n  animation: enter .5s ease-in-out;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n.in {width: 330px; animation: enterAnim .3s ease-in-out;}\\r\\n.out {width: 0; animation: outAnim .3s ease-in-out;}\\r\\n\\r\\n@keyframes enterAnim {\\r\\n  0% { width: 0; }\\r\\n  100% { width: 330px; }\\r\\n}\\r\\n@keyframes outAnim {\\r\\n  0% { width: 330px; }\\r\\n  100% { width: 0; }\\r\\n}\\r\\n.content {\\r\\n  padding: 60px 0 0 30px;\\r\\n  width: 1000px;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n.content iframe {\\r\\n  margin: 0 auto;\\r\\n  width: 100%;\\r\\n  height: 800px;\\r\\n  scroll-behavior: unset;\\r\\n  border: none;\\r\\n}\\r\\n\\r\\n@media (max-width: 770px) {\\r\\n  .sidebar {\\r\\n    position: absolute;\\r\\n    background: #fff;\\r\\n  }\\r\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,SAAS;EACT,UAAU;EACV,iCAAiC;EACjC,gBAAgB;AAClB;;AAEA;EACE,aAAa;;AAEf;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,aAAa;EACb,mBAAmB;EACnB,yBAAyB;EACzB,qCAAqC;EACrC,UAAU;AACZ;;AAEA;EACE,cAAc;EACd,eAAe;AACjB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,QAAQ;EACR,iBAAiB;EACjB,cAAc;EACd,aAAa;EACb,2BAA2B;EAC3B,0CAA0C;EAC1C,gCAAgC;EAChC,gBAAgB;AAClB;;AAEA,KAAK,YAAY,EAAE,oCAAoC,CAAC;AACxD,MAAM,QAAQ,EAAE,kCAAkC,CAAC;;AAEnD;EACE,KAAK,QAAQ,EAAE;EACf,OAAO,YAAY,EAAE;AACvB;AACA;EACE,KAAK,YAAY,EAAE;EACnB,OAAO,QAAQ,EAAE;AACnB;AACA;EACE,sBAAsB;EACtB,aAAa;EACb,cAAc;AAChB;AACA;EACE,cAAc;EACd,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,YAAY;AACd;;AAEA;EACE;IACE,kBAAkB;IAClB,gBAAgB;EAClB;AACF\",\"sourcesContent\":[\"body {\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  font-family: 'Roboto', sans-serif;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n.content-wrap {\\r\\n  display: flex;\\r\\n\\r\\n}\\r\\n\\r\\n.navbar {\\r\\n  width: 100%;\\r\\n  height: 60px;\\r\\n  position: absolute;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  background-color: #339cff;\\r\\n  box-shadow: 0 0 6px rgba(0, 0, 0, .4);\\r\\n  z-index: 1;\\r\\n}\\r\\n\\r\\n.navbar #toggler {\\r\\n  margin: 0 20px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.navbar h1 {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.sidebar {\\r\\n  width: 0;\\r\\n  padding-top: 70px;\\r\\n  display: block;\\r\\n  height: 100vh;\\r\\n  background-color: #5d9eff26;\\r\\n  box-shadow: rgb(0 40 73 / 53%) 0px 0px 5px;\\r\\n  animation: enter .5s ease-in-out;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n.in {width: 330px; animation: enterAnim .3s ease-in-out;}\\r\\n.out {width: 0; animation: outAnim .3s ease-in-out;}\\r\\n\\r\\n@keyframes enterAnim {\\r\\n  0% { width: 0; }\\r\\n  100% { width: 330px; }\\r\\n}\\r\\n@keyframes outAnim {\\r\\n  0% { width: 330px; }\\r\\n  100% { width: 0; }\\r\\n}\\r\\n.content {\\r\\n  padding: 60px 0 0 30px;\\r\\n  width: 1000px;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n.content iframe {\\r\\n  margin: 0 auto;\\r\\n  width: 100%;\\r\\n  height: 800px;\\r\\n  scroll-behavior: unset;\\r\\n  border: none;\\r\\n}\\r\\n\\r\\n@media (max-width: 770px) {\\r\\n  .sidebar {\\r\\n    position: absolute;\\r\\n    background: #fff;\\r\\n  }\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \"string\") {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \"\"]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nmodule.exports = function cssWithMappingToString(item) {\n  var _item = _slicedToArray(item, 4),\n      content = _item[1],\n      cssMapping = _item[3];\n\n  if (typeof btoa === \"function\") {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes.createPolicy('lit-html', { createHTML: (s) => s });\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        let value = this.getHTML();\n        if (policy !== undefined) {\n            // this is secure because `this.strings` is a TemplateStringsArray.\n            // TODO: validate this when\n            // https://github.com/tc39/proposal-array-is-template-object is\n            // implemented.\n            value = policy.createHTML(value);\n        }\n        template.innerHTML = value;\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        const parts = this.parts;\n        // If we're assigning an attribute via syntax like:\n        //    attr=\"${foo}\"  or  attr=${foo}\n        // but not\n        //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n        // then we don't want to coerce the attribute value into one long\n        // string. Instead we want to just return the value itself directly,\n        // so that sanitizeDOMValue can get the actual value rather than\n        // String(value)\n        // The exception is if v is an array, in which case we do want to smash\n        // it together into a string without calling String() on the array.\n        //\n        // This also allows trusted values (when using TrustedTypes) being\n        // assigned to DOM sinks without being stringified in the process.\n        if (l === 1 && strings[0] === '' && strings[1] === '') {\n            const v = parts[0].value;\n            if (typeof v === 'symbol') {\n                return String(v);\n            }\n            if (typeof v === 'string' || !isIterable(v)) {\n                return v;\n            }\n        }\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.3.0');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nexport const shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * Use this module if you want to create your own base class extending\n * [[UpdatingElement]].\n * @packageDocumentation\n */\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist\n     * and stores a PropertyDeclaration for the property with the given options.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     *\n     * This method may be overridden to customize properties; however,\n     * when doing so, it's important to call `super.createProperty` to ensure\n     * the property is setup correctly. This method calls\n     * `getPropertyDescriptor` internally to get a descriptor to install.\n     * To customize what properties do when they are get or set, override\n     * `getPropertyDescriptor`. To customize the options for a property,\n     * implement `createProperty` like this:\n     *\n     * static createProperty(name, options) {\n     *   options = Object.assign(options, {myOption: true});\n     *   super.createProperty(name, options);\n     * }\n     *\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        const descriptor = this.getPropertyDescriptor(name, key, options);\n        if (descriptor !== undefined) {\n            Object.defineProperty(this.prototype, name, descriptor);\n        }\n    }\n    /**\n     * Returns a property descriptor to be defined on the given named property.\n     * If no descriptor is returned, the property will not become an accessor.\n     * For example,\n     *\n     *   class MyElement extends LitElement {\n     *     static getPropertyDescriptor(name, key, options) {\n     *       const defaultDescriptor =\n     *           super.getPropertyDescriptor(name, key, options);\n     *       const setter = defaultDescriptor.set;\n     *       return {\n     *         get: defaultDescriptor.get,\n     *         set(value) {\n     *           setter.call(this, value);\n     *           // custom action.\n     *         },\n     *         configurable: true,\n     *         enumerable: true\n     *       }\n     *     }\n     *   }\n     *\n     * @nocollapse\n     */\n    static getPropertyDescriptor(name, key, options) {\n        return {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this\n                    .requestUpdateInternal(name, oldValue, options);\n            },\n            configurable: true,\n            enumerable: true\n        };\n    }\n    /**\n     * Returns the property options associated with the given property.\n     * These options are defined with a PropertyDeclaration via the `properties`\n     * object or the `@property` decorator and are registered in\n     * `createProperty(...)`.\n     *\n     * Note, this method should be considered \"final\" and not overridden. To\n     * customize the options for a given property, override `createProperty`.\n     *\n     * @nocollapse\n     * @final\n     */\n    static getPropertyOptions(name) {\n        return this._classProperties && this._classProperties.get(name) ||\n            defaultPropertyDeclaration;\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._updateState = 0;\n        this._updatePromise =\n            new Promise((res) => this._enableUpdatingResolver = res);\n        this._changedProperties = new Map();\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this.requestUpdateInternal();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection.\n        this.enableUpdating();\n    }\n    enableUpdating() {\n        if (this._enableUpdatingResolver !== undefined) {\n            this._enableUpdatingResolver();\n            this._enableUpdatingResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        // Note, hint this as an `AttributeMap` so closure clearly understands\n        // the type; it has issues with tracking types through statics\n        // tslint:disable-next-line:no-unnecessary-type-assertion\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor.getPropertyOptions(propName);\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This protected version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    requestUpdateInternal(name, oldValue, options) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            options = options || ctor.getPropertyOptions(name);\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._updatePromise = this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this.requestUpdateInternal(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await this._updatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        const result = this.performUpdate();\n        // If `performUpdate` returns a Promise, we await it. This is done to\n        // enable coordinating updates with a scheduler. Note, the result is\n        // checked to avoid delaying an additional microtask unless we need to.\n        if (result != null) {\n            await result;\n        }\n        return !this._hasRequestedUpdate;\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Abort any update if one is not pending when this is called.\n        // This can happen if `performUpdate` is called early to \"flush\"\n        // the update.\n        if (!this._hasRequestedUpdate) {\n            return;\n        }\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n            else {\n                this._markUpdated();\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n            throw e;\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n        this._markUpdated();\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```\n * @customElement('my-element')\n * class MyElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The name of the custom element to define.\n */\nexport const customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign(Object.assign({}, element), { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A [[`PropertyDeclaration`]] may optionally be\n * supplied to configure property features.\n *\n * This decorator should only be used for public fields. Private or protected\n * fields should use the [[`internalProperty`]] decorator.\n *\n * @example\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nexport function internalProperty(options) {\n    return property({ attribute: false, hasChanged: options === null || options === void 0 ? void 0 : options.hasChanged });\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n * once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector, cache) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        if (cache) {\n            const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n            descriptor.get = function () {\n                if (this[key] === undefined) {\n                    (this[key] =\n                        this.renderRoot.querySelector(selector));\n                }\n                return this[key];\n            };\n        }\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAsync('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n *\n * // external usage\n * async doSomethingWithFirst() {\n *  (await aMyElement.first).doSomething();\n * }\n * ```\n * @category Decorator\n */\nexport function queryAsync(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            async get() {\n                await this.updateComplete;\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAll('div')\n *   divs;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign(Object.assign({}, element), { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n * ```ts\n * class MyElement {\n *   clicked = false;\n *\n *   render() {\n *     return html`\n *       <div @click=${this._onClick}`>\n *         <button></button>\n *       </div>\n *     `;\n *   }\n *\n *   @eventOptions({capture: true})\n *   _onClick(e) {\n *     this.clicked = true;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function eventOptions(options) {\n    // Return value typed as any to prevent TypeScript from complaining that\n    // standard decorator function signature does not match TypeScript decorator\n    // signature\n    // TODO(kschaaf): unclear why it was only failing on this decorator and not\n    // the others\n    return ((protoOrDescriptor, name) => (name !== undefined) ?\n        legacyEventOptions(options, protoOrDescriptor, name) :\n        standardEventOptions(options, protoOrDescriptor));\n}\n// x-browser support for matches\n// tslint:disable-next-line:no-any\nconst ElementProto = Element.prototype;\nconst legacyMatches = ElementProto.msMatchesSelector || ElementProto.webkitMatchesSelector;\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`. Note, the type of\n * this property should be annotated as `NodeListOf<HTMLElement>`.\n *\n * @param slotName A string name of the slot.\n * @param flatten A boolean which when true flattens the assigned nodes,\n * meaning any assigned nodes that are slot elements are replaced with their\n * assigned nodes.\n * @param selector A string which filters the results to elements that match\n * the given css selector.\n *\n * * @example\n * ```ts\n * class MyElement {\n *   @queryAssignedNodes('list', true, '.item')\n *   listItems;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAssignedNodes(slotName = '', flatten = false, selector = '') {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                const slotSelector = `slot${slotName ? `[name=${slotName}]` : ':not([name])'}`;\n                const slot = this.renderRoot.querySelector(slotSelector);\n                let nodes = slot && slot.assignedNodes({ flatten });\n                if (nodes && selector) {\n                    nodes = nodes.filter((node) => node.nodeType === Node.ELEMENT_NODE &&\n                        node.matches ?\n                        node.matches(selector) :\n                        legacyMatches.call(node, selector));\n                }\n                return nodes;\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n//# sourceMappingURL=decorators.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets = (window.ShadowRoot) &&\n    (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `supportsAdoptingStyleSheets` is true then we assume\n            // CSSStyleSheet is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a [[`css`]] tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's [[LitElement.styles |\n * `styles`]] property to set element styles. For security reasons, only literal\n * string values may be used. To incorporate non-literal values [[`unsafeCSS`]]\n * may be used inside a template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * The main LitElement module, which defines the [[`LitElement`]] base class and\n * related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import [[`LitElement`]] and [[`html`]] from this module to create a\n * component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends [[`UpdatingElement`]] and adds lit-html templating.\n * The `UpdatingElement` class is provided for users that want to build\n * their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets, unsafeCSS } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.4.0');\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the [[`properties`]] property or the [[`property`]] decorator.\n */\nexport class LitElement extends UpdatingElement {\n    /**\n     * Return the array of styles to apply to the element.\n     * Override this method to integrate into a style management system.\n     *\n     * @nocollapse\n     */\n    static getStyles() {\n        return this.styles;\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Only gather styles once per class\n        if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n            return;\n        }\n        // Take care not to call `this.getStyles()` multiple times since this\n        // generates new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.getStyles();\n        if (Array.isArray(userStyles)) {\n            // De-duplicate styles preserving the _last_ instance in the set.\n            // This is a performance optimization to avoid duplicated styles that can\n            // occur especially when composing via subclassing.\n            // The last item is kept to try to preserve the cascade order with the\n            // assumption that it's most important that last added styles override\n            // previous styles.\n            const addStyles = (styles, set) => styles.reduceRight((set, s) => \n            // Note: On IE set.add() does not return the set\n            Array.isArray(s) ? addStyles(s, set) : (set.add(s), set), set);\n            // Array.from does not work on Set in IE, otherwise return\n            // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n            const set = addStyles(userStyles, new Set());\n            const styles = [];\n            set.forEach((v) => styles.unshift(v));\n            this._styles = styles;\n        }\n        else {\n            this._styles = userStyles === undefined ? [] : [userStyles];\n        }\n        // Ensure that there are no invalid CSSStyleSheet instances here. They are\n        // invalid in two conditions.\n        // (1) the sheet is non-constructible (`sheet` of a HTMLStyleElement), but\n        //     this is impossible to check except via .replaceSync or use\n        // (2) the ShadyCSS polyfill is enabled (:. supportsAdoptingStyleSheets is\n        //     false)\n        this._styles = this._styles.map((s) => {\n            if (s instanceof CSSStyleSheet && !supportsAdoptingStyleSheets) {\n                // Flatten the cssText from the passed constructible stylesheet (or\n                // undetectable non-constructible stylesheet). The user might have\n                // expected to update their stylesheets over time, but the alternative\n                // is a crash.\n                const cssText = Array.prototype.slice.call(s.cssRules)\n                    .reduce((css, rule) => css + rule.cssText, '');\n                return unsafeCSS(cssText);\n            }\n            return s;\n        });\n    }\n    /**\n     * Performs element initialization. By default this calls\n     * [[`createRenderRoot`]] to create the element [[`renderRoot`]] node and\n     * captures any pre-set values for registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.constructor._getUniqueStyles();\n        this.renderRoot = this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the [[`styles`]]\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        // Setting properties in `render` should not trigger an update. Since\n        // updates are allowed after super.update, it's important to call `render`\n        // before that.\n        const templateResult = this.render();\n        super.update(changedProperties);\n        // If render is not implemented by the component, don't call lit-html render\n        if (templateResult !== renderNotImplemented) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method may return\n     * any value renderable by lit-html's `NodePart` - typically a\n     * `TemplateResult`. Setting properties inside this method will *not* trigger\n     * the element to update.\n     */\n    render() {\n        return renderNotImplemented;\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Reference to the underlying library method used to render the element's\n * DOM. By default, points to the `render` method from lit-html's shady-render\n * module.\n *\n * **Most users will never need to touch this property.**\n *\n * This  property should not be confused with the `render` instance method,\n * which should be overridden to define a template for the element.\n *\n * Advanced users creating a new base class based on LitElement can override\n * this property to point to a custom render method with a signature that\n * matches [shady-render's `render`\n * method](https://lit-html.polymer-project.org/api/modules/shady_render.html#render).\n *\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","import { LitElement, html } from 'lit-element';\r\n\r\nclass Icon extends LitElement {\r\n  static get properties() {\r\n    return {\r\n      name: { type: String },\r\n      color: { type: String },\r\n      size: { type: Number }\r\n    }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.name = ''\r\n    this.color = '#339cff';\r\n    this.size = 24;\r\n  }\r\n\r\n\r\n  render() {\r\n    switch (this.name) {\r\n      case 'menu':\r\n        return html`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${this.size}\" height=\"${this.size}\" viewBox=\"0 0 24 24\" style=\"fill:${this.color};transform:;-ms-filter:\"><path d=\"M4 6H20V8H4zM4 11H20V13H4zM4 16H20V18H4z\"></path></svg>`;\r\n      case 'trend':\r\n        return html`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${this.size}\" height=\"${this.size}\" viewBox=\"0 0 24 24\" style=\"fill:${this.color};transform:;-ms-filter:\"><path d=\"M10 10.414L14 14.414 19.707 8.707 22 11 22 5 16 5 18.293 7.293 14 11.586 10 7.586 2.293 15.293 3.707 16.707z\"></path></svg>`;\r\n      case 'stat':\r\n        return html`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${this.size}\" height=\"${this.size}\" viewBox=\"0 0 24 24\" style=\"fill:${this.color};transform:;-ms-filter:\"><path d=\"M20,12c-0.249,0-0.483,0.051-0.703,0.133l-2.398-1.963C16.958,9.956,17,9.734,17,9.5C17,8.114,15.886,7,14.5,7 S12,8.114,12,9.5c0,0.396,0.1,0.765,0.262,1.097l-2.909,3.438C9.237,14.015,9.121,14,9,14c-0.179,0-0.348,0.03-0.512,0.074 l-2.563-2.563C5.97,11.348,6,11.179,6,11c0-1.108-0.892-2-2-2s-2,0.892-2,2s0.892,2,2,2c0.179,0,0.348-0.03,0.512-0.074 l2.563,2.563C7.03,15.652,7,15.821,7,16c0,1.108,0.892,2,2,2s2-0.892,2-2c0-0.237-0.048-0.46-0.123-0.671l2.913-3.442 C14.017,11.953,14.252,12,14.5,12c0.411,0,0.792-0.107,1.133-0.281l2.399,1.963C18.016,13.786,18,13.891,18,14c0,1.108,0.892,2,2,2 s2-0.892,2-2S21.108,12,20,12z\"></path></svg>`;\r\n      case 'pie':\r\n        return html`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${this.size}\" height=\"${this.size}\" viewBox=\"0 0 24 24\" style=\"fill:${this.color};transform:;-ms-filter:\"><path d=\"M12,2C6.486,2,2,6.486,2,12s4.486,10,10,10s10-4.486,10-10S17.514,2,12,2z M19.931,11H13V6V4.069 C16.611,4.522,19.478,7.389,19.931,11z M4,12c0-4.072,3.061-7.436,7-7.931V6v6c0,0.119,0.028,0.234,0.069,0.345 c0.013,0.032,0.026,0.062,0.042,0.093c0.015,0.03,0.022,0.063,0.041,0.093l4.202,6.723C14.332,19.728,13.198,20,12,20 C7.589,20,4,16.411,4,12z M17.052,18.196L13.805,13h6.126C19.669,15.087,18.605,16.928,17.052,18.196z\"></path></svg>`;\r\n      case 'bar':\r\n        return html`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${this.size}\" height=\"${this.size}\" viewBox=\"0 0 24 24\" style=\"fill:${this.color};transform:;-ms-filter:\"><path d=\"M6 21H3c-.553 0-1-.448-1-1v-8c0-.552.447-1 1-1h3c.553 0 1 .448 1 1v8C7 20.552 6.553 21 6 21zM13 21h-3c-.553 0-1-.448-1-1V3c0-.552.447-1 1-1h3c.553 0 1 .448 1 1v17C14 20.552 13.553 21 13 21zM20 21h-3c-.553 0-1-.448-1-1V9c0-.552.447-1 1-1h3c.553 0 1 .448 1 1v11C21 20.552 20.553 21 20 21z\"></path></svg>`;\r\n      case 'line':\r\n        return html`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${this.size}\" height=\"${this.size}\" viewBox=\"0 0 24 24\" style=\"fill:${this.color};transform:;-ms-filter:\"><path d=\"M3,3v17c0,0.553,0.447,1,1,1h17v-2H5V3H3z\"></path><path d=\"M15.293,14.707c0.391,0.391,1.023,0.391,1.414,0l5-5l-1.414-1.414L16,12.586l-2.293-2.293 c-0.391-0.391-1.023-0.391-1.414,0l-5,5l1.414,1.414L13,12.414L15.293,14.707z\"></path></svg>`;\r\n      case 'net':\r\n        return html`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${this.size}\" height=\"${this.size}\" viewBox=\"0 0 24 24\" style=\"fill:${this.color};transform:;-ms-filter:\"><path d=\"M19.5,3C18.121,3,17,4.121,17,5.5c0,0.357,0.078,0.696,0.214,1.005l-1.955,2.199C14.615,8.262,13.839,8,13,8 c-0.74,0-1.424,0.216-2.019,0.566L8.707,6.293L8.684,6.316C8.88,5.918,9,5.475,9,5c0-1.657-1.343-3-3-3S3,3.343,3,5s1.343,3,3,3 c0.475,0,0.917-0.12,1.316-0.316L7.293,7.707L9.567,9.98C9.215,10.576,9,11.261,9,12c0,0.997,0.38,1.899,0.985,2.601l-2.577,2.576 C7.126,17.066,6.821,17,6.5,17C5.122,17,4,18.121,4,19.5S5.122,22,6.5,22S9,20.879,9,19.5c0-0.321-0.066-0.626-0.177-0.909 l2.838-2.838C12.082,15.903,12.528,16,13,16c2.206,0,4-1.794,4-4c0-0.636-0.163-1.229-0.428-1.764l2.117-2.383 C18.945,7.941,19.215,8,19.5,8C20.879,8,22,6.879,22,5.5S20.879,3,19.5,3z M13,14c-1.103,0-2-0.897-2-2s0.897-2,2-2 c1.103,0,2,0.897,2,2S14.103,14,13,14z\"></path></svg>`;\r\n      case 'base':\r\n        return html`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${this.size}\" height=\"${this.size}\" viewBox=\"0 0 24 24\" style=\"fill:${this.color};transform:;-ms-filter:\"><path d=\"M12,22c3.976,0,8-1.374,8-4v-4v-4V6c0-2.626-4.024-4-8-4S4,3.374,4,6v4v4v4C4,20.626,8.024,22,12,22z M12,20 c-3.722,0-6-1.295-6-2v-1.268C7.541,17.57,9.777,18,12,18s4.459-0.43,6-1.268V18C18,18.705,15.722,20,12,20z M12,4 c3.722,0,6,1.295,6,2s-2.278,2-6,2S6,6.705,6,6S8.278,4,12,4z M6,8.732C7.541,9.57,9.777,10,12,10s4.459-0.43,6-1.268V10 c0,0.705-2.278,2-6,2s-6-1.295-6-2V8.732z M6,12.732C7.541,13.57,9.777,14,12,14s4.459-0.43,6-1.268V14c0,0.705-2.278,2-6,2 s-6-1.295-6-2V12.732z\"></path></svg>`;\r\n      default:\r\n        return html`<div style=\"widht:${this.size}; height:${this.size}\"></div>`;\r\n    }\r\n  }\r\n}\r\n\r\ncustomElements.define('my-icon', Icon);","import { LitElement, html, css } from 'lit-element';\r\n\r\nclass MenuItem extends LitElement {\r\n  static get properties() {\r\n    return {\r\n      title: {type: String},\r\n      icon: {type: String},\r\n      url: {type: String}\r\n    }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.title = '';\r\n    this.icon = '';\r\n    this.url = '';\r\n\r\n    this.content = document.querySelector('.content');\r\n    this.onclick = (e) => this.content.innerHTML = `<h1>${e.target.title}</h1><iframe src=\"${this.url}\"></iframe>`;\r\n  }\r\n\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"item\">\r\n        ${this.icon ? html`<my-icon name=\"${this.icon}\"></my-icon>` : html`<div style=\"widht:30px; height:30px\"></div>`}\r\n        ${this.title}\r\n      </div>`\r\n  }\r\n\r\n  static get styles() {\r\n    return css`\r\n      .item {\r\n        display: flex;\r\n        align-items: center;\r\n        margin: 10px 25px;\r\n        padding: 5px 10px;\r\n        border: 1px solid #0099ff;\r\n        border-radius: 5px;\r\n        cursor: pointer;\r\n        line-height: 0;\r\n        background-color: white;\r\n        transition: all .3s;\r\n      }\r\n      .item:active {\r\n        background-color: #0375c2;;\r\n      }\r\n      .item:hover {\r\n        background-color: transparent;\r\n        transform: scale(1.1);\r\n      }\r\n      .item my-icon {\r\n        margin-right: 10px;\r\n      }\r\n    `;\r\n  }\r\n}\r\n\r\ncustomElements.define('menu-item', MenuItem);","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import \"./components/Icon.js\";\r\nimport \"./components/MenuItem.js\";\r\nimport \"./style.css\";\r\nimport {items} from \"./data.js\";\r\n\r\nlet visible = true;\r\nconst sidebar = document.querySelector('.sidebar');\r\nconst toggleBtn = document.querySelector('#toggler');\r\n\r\ndocument.onclick = ({target}) => {\r\n  const { classList } = sidebar;\r\n  if (target === toggleBtn) {\r\n    visible = !visible;\r\n  \r\n    if (!visible) {\r\n      classList.remove('in');\r\n      classList.add('out');\r\n    } else {\r\n      classList.remove('out');\r\n      classList.add('in');\r\n    }\r\n  } else {\r\n    if (visible && (window.innerWidth < 770)) {\r\n      visible = !visible;\r\n      classList.remove('in');\r\n      classList.add('out');\r\n    }\r\n  }\r\n}\r\n\r\nconst renderMenuItems = ({title, icon, url}) => `<menu-item title=\"${title}\" icon=\"${icon}\" url=\"${url}\"></menu-item>`;\r\nsidebar.insertAdjacentHTML('afterbegin', items.map(renderMenuItems).join(''))","export const items = [\r\n  {title: 'Trends', icon: 'trend', url: 'https://www.chartjs.org/samples/latest/advanced/progress-bar.html' },\r\n  {title: 'Statistics', icon: 'stat', url: 'https://www.chartjs.org/samples/latest/charts/line/basic.html'},\r\n  {title: 'Pie Chart', icon: 'pie', url: 'https://www.chartjs.org/samples/latest/charts/pie.html'},\r\n  {title: 'Bar Chart', icon: 'bar', url: 'https://www.chartjs.org/samples/latest/charts/bar/vertical.html'},\r\n  {title: 'Line Chart', icon: 'line', url: 'https://www.chartjs.org/samples/latest/scales/time/line.html'},\r\n  {title: 'Network', icon: 'net', url: 'https://www.chartjs.org/samples/latest/scriptable/bubble.html'},\r\n  {title: 'Data', icon: 'base', url: 'https://www.chartjs.org/samples/latest/charts/area/line-datasets.html'},\r\n];"],"sourceRoot":""}